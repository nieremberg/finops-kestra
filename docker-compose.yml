version: '3.8'

services:
  postgres:
    image: postgres:16.9
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - kestra-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'
        reservations:
          memory: 512M
          cpus: '0.5'

  kestra:
    image: kestra/kestra:v0.15.0
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      KESTRA_DATABASE_TYPE: postgres
      KESTRA_DATABASE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      KESTRA_DATABASE_USERNAME: ${POSTGRES_USER}
      KESTRA_DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8080:8080"
    volumes:
      - kestra_data:/app/storage
    networks:
      - kestra-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2'
        reservations:
          memory: 1G
          cpus: '1'

  superset:
    image: apache/superset:3.0.0
    environment:
      SUPERSET_USER: ${SUPERSET_USER}
      SUPERSET_PASSWORD: ${SUPERSET_PASSWORD}
      SUPERSET_DATABASE_TYPE: postgresql
      SUPERSET_DATABASE_HOST: postgres
      SUPERSET_DATABASE_PORT: 5432
      SUPERSET_DATABASE_USER: ${POSTGRES_USER}
      SUPERSET_DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      SUPERSET_DATABASE_NAME: ${POSTGRES_DB}
    ports:
      - "8088:8088"
    volumes:
      - superset_data:/app/superset_home
    networks:
      - kestra-net
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2'
        reservations:
          memory: 1G
          cpus: '1'

  pivot:
    build:
      context: ./Pivot
      dockerfile: Dockerfile
    ports:
      - "9090:8080"
    volumes:
      - pivot_data:/var/lib/pivot
    networks:
      - kestra-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'
        reservations:
          memory: 512M
          cpus: '0.5'

  nginx:
    image: nginx:1.28.0
    ports:
      - "80:80"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      kestra:
        condition: service_healthy
      superset:
        condition: service_healthy
      pivot:
        condition: service_healthy
    networks:
      - kestra-net
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  prometheus:
    image: prom/prometheus:v2.45.0
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - kestra-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'
        reservations:
          memory: 512M
          cpus: '0.5'

  grafana:
    image: grafana/grafana:10.0.0
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    networks:
      - kestra-net
    depends_on:
      - prometheus
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'
        reservations:
          memory: 512M
          cpus: '0.5'

  node-exporter:
    image: prom/node-exporter:v1.6.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - kestra-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

volumes:
  pgdata:
  kestra_data:
  superset_data:
  pivot_data:
  nginx_logs:
  prometheus_data:
  grafana_data:

networks:
  kestra-net:
    driver: bridge
